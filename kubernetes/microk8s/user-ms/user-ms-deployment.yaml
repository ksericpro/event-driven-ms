apiVersion: apps/v1
kind: Deployment
metadata:
  #annotations:
  #  kompose.cmd: kompose convert -f docker-compose.yml
  #  kompose.version: 1.31.2 (a92241f79)
  #creationTimestamp: null
  #labels:
  #  io.kompose.service: user-ms
  name: user-ms-deployment
  namespace: ingress-nginx  
spec:
  replicas: 2
  selector:
    matchLabels:
      #io.kompose.service: user-ms
      app: user-ms
  strategy:
    type: Recreate
  template:
    #metadata:
    #  annotations:
    #    kompose.cmd: kompose convert -f docker-compose.yml
    #    kompose.version: 1.31.2 (a92241f79)
    #  creationTimestamp: null
    #  labels:
    #    io.kompose.network/kompose-default: "true"
    #    io.kompose.service: user-ms
    #  name: user-ms
    metadata:
      labels:
        app: user-ms
    spec:
      containers:
        - env:
            - name: AMQP_URL
              #value: amqp://guest:guest@rabbitmq:5672
              value: amqp://guest:guest@rabbitmq.default.svc.cluster.local:5672
              #<service-name>.<service-namespace>.svc.cluster.local
            - name: QUEUE
              value: event_driven
          image: ksericpro/user-ms:1.2.1
          name: user-ms
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /app/src
              name: user-ms-claim0
      restartPolicy: Always
      volumes:
        - name: user-ms-claim0
          persistentVolumeClaim:
            claimName: user-ms-claim0
#status: {}
